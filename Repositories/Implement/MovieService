using Katalog.Models.Domain;
using Katalog.Models.DTO;
using Katalog.Repositories.Abstract;

namespace Katalog.Repositories.Implement
{
    public class MovieService : IMovieService //Класът отговаря за добавянето, изтриването, обновяването и извиличането на филми от базата данни
    {
        
        private readonly DatabaseContext ctx;
        public MovieService(DatabaseContext ctx)
        {
            this.ctx = ctx;
        }
        public bool Add(Movie model) //Методът добавя нов филм към базата данни заедно със зададените към него жанрове.
        {
            try
            {
                ctx.Movie.Add(model);
                ctx.SaveChanges();
                foreach (int genreId in model.Genres)
                {
                    var movieGenre = new MovieGenre
                    {
                        MovieId = model.Id,
                        GenreId = genreId
                    };
                    ctx.MovieGenre.Add(movieGenre);
                }
                ctx.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                return false;
            }
        }

        public bool Delete(int id) //Методът премахва филм от базата данни заедно със зададените към него жанрове.
        {
            try
            {
                var data = this.GetById(id);
                if (data == null)
                    return false;
                var movieGenres = ctx.MovieGenre.Where(a=>a.MovieId == data.Id);
                foreach(var movieGenre in movieGenres)
                {
                    ctx.MovieGenre.Remove(movieGenre);
                }
                ctx.Movie.Remove(data);
                ctx.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                return false;
            }
        }

        public Movie GetById(int id) //Извлича филм от Movie таблиата в базата данни
        {
            return ctx.Movie.Find(id);
        }

        public MovieListVm List(string term="",bool paging = false, int currentPage=0) //Методът извлича списък с всички филми от таблицата Movie,
        //по избор филтриран по дума за търсене/paginated.
        {
            var data = new MovieListVm();
            
            var list = ctx.Movie.ToList();
            
            if (!string.IsNullOrEmpty(term))
            {
                term = term.ToLower();
                list = list.Where(a => a.Title.ToLower().StartsWith(term)).ToList();
            }

            if (paging) //Добавяме страниците - номерация (paging)
            {
                int pageSize = 5;
                int count = list.Count;
                int TotalPages = (int)Math.Ceiling(count / (double)pageSize);
                list = list.Skip((currentPage - 1)*pageSize).Take(pageSize).ToList();
                data.PageSize=pageSize;
                data.CurrentPage=currentPage;
                data.TotalPages = TotalPages;
            }
            foreach (var movie in list)//преминава през списъка с филми и за всеки филм отправя запитване към таблиците Genre и MovieGenre
            //в базата данни, за да извлече имената на жанровете, свързани с дадения филм
            {
                var genres = (from genre in ctx.Genre
                              join mg in ctx.MovieGenre
                              on genre.Id equals mg.GenreId
                              where mg.MovieId == movie.Id
                              select genre.GenreName
                              ).ToList();
                var genreNames = string.Join(',', genres);
                movie.GenreNames = genreNames;
            }
            data.MovieList = list.AsQueryable();
            return data;
        }

        public bool Update(Movie model) //Методът актуализира съществуващ филм в базата данни заедно със зададените към него жанрове.
        {
            try
            {
                // При ъпдейт/едит на филм жанровете, които не са избрани от потребителя, трябва да бъдат изтрити от таблицата movieGenre (Id - movie ; Id - genres)
                var genresToDeleted = ctx.MovieGenre.Where(a => a.MovieId == model.Id && !model.Genres.Contains(a.GenreId)).ToList();
                foreach (var mGenre in genresToDeleted)
                {
                    ctx.MovieGenre.Remove(mGenre);
                }
                foreach (int genId in model.Genres)
                {
                    var movieGenre = ctx.MovieGenre.FirstOrDefault(a => a.MovieId == model.Id && a.GenreId == genId); //FirstOrDefault - първи елемент или null
                    if (movieGenre == null)
                    {
                        movieGenre = new MovieGenre { GenreId = genId, MovieId = model.Id };
                        ctx.MovieGenre.Add(movieGenre);
                    }
                }

                ctx.Movie.Update(model);
                ctx.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                return false;
            }
        }

        public List<int> GetGenreByMovieId(int movieID) //Взима id-тата на жанровете, свързани с id-то на конкретен филм
        {
            var genreIds = ctx.MovieGenre.Where(a => a.MovieId == movieID).Select(a => a.GenreId).ToList();
            return genreIds;
        }
    }
}
